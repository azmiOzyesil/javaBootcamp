package kodlama.io.softwareCourse.dataAccess.concretes;

import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Repository;

import kodlama.io.softwareCourse.dataAccess.abstracts.LanguageRepository;
import kodlama.io.softwareCourse.entities.concretes.Language;

@Repository
public class InMemoryLanguageRepository implements LanguageRepository{

	List<Language> languages;
	
	public InMemoryLanguageRepository() {
		languages = new ArrayList<Language>();
		languages.add(new Language(1, "C#"));
		languages.add(new Language(2, "Java"));
		languages.add(new Language(3, "Python"));
	}

	@Override
	public List<Language> getAll() {
		
		return languages;
	}

	@Override
	public void add(Language language) {
		for (Language language : languages) {
			if(language.getName().equals(language.getName()))
				System.out.println("Name can not be repeated!");
			else if(language.getName().isEmpty())
				System.out.println("Name can not be empty!");
			else
				languages.add(language);
		}
	}

	@Override
	public void delete(int id) {
	}

	@Override
	public void update(Language language) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public Language getById(int id) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Language getByName(String name) {
		// TODO Auto-generated method stub
		return null;
	}

}
